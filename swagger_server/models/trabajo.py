# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.trabajo_links import TrabajoLinks  # noqa: F401,E501
from swagger_server import util


class Trabajo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, trabajo_id: int=None, id_vehiculo: int=None, id_cliente: int=None, nombre: str=None, descripcion: str=None, estado_trabajo: str=None, fecha_inicio: datetime=None, fecha_fin: datetime=None, links: TrabajoLinks=None):  # noqa: E501
        """Trabajo - a model defined in Swagger

        :param trabajo_id: The trabajo_id of this Trabajo.  # noqa: E501
        :type trabajo_id: int
        :param id_vehiculo: The id_vehiculo of this Trabajo.  # noqa: E501
        :type id_vehiculo: int
        :param id_cliente: The id_cliente of this Trabajo.  # noqa: E501
        :type id_cliente: int
        :param nombre: The nombre of this Trabajo.  # noqa: E501
        :type nombre: str
        :param descripcion: The descripcion of this Trabajo.  # noqa: E501
        :type descripcion: str
        :param estado_trabajo: The estado_trabajo of this Trabajo.  # noqa: E501
        :type estado_trabajo: str
        :param fecha_inicio: The fecha_inicio of this Trabajo.  # noqa: E501
        :type fecha_inicio: datetime
        :param fecha_fin: The fecha_fin of this Trabajo.  # noqa: E501
        :type fecha_fin: datetime
        :param links: The links of this Trabajo.  # noqa: E501
        :type links: TrabajoLinks
        """
        self.swagger_types = {
            'trabajo_id': int,
            'id_vehiculo': int,
            'id_cliente': int,
            'nombre': str,
            'descripcion': str,
            'estado_trabajo': str,
            'fecha_inicio': datetime,
            'fecha_fin': datetime,
            'links': TrabajoLinks
        }

        self.attribute_map = {
            'trabajo_id': 'trabajoId',
            'id_vehiculo': 'idVehiculo',
            'id_cliente': 'idCliente',
            'nombre': 'nombre',
            'descripcion': 'descripcion',
            'estado_trabajo': 'estadoTrabajo',
            'fecha_inicio': 'fechaInicio',
            'fecha_fin': 'fechaFin',
            'links': 'links'
        }
        self._trabajo_id = trabajo_id
        self._id_vehiculo = id_vehiculo
        self._id_cliente = id_cliente
        self._nombre = nombre
        self._descripcion = descripcion
        self._estado_trabajo = estado_trabajo
        self._fecha_inicio = fecha_inicio
        self._fecha_fin = fecha_fin
        self._links = links

    @classmethod
    def from_dict(cls, dikt) -> 'Trabajo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Trabajo of this Trabajo.  # noqa: E501
        :rtype: Trabajo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def trabajo_id(self) -> int:
        """Gets the trabajo_id of this Trabajo.

        Identicador del trabajo  # noqa: E501

        :return: The trabajo_id of this Trabajo.
        :rtype: int
        """
        return self._trabajo_id

    @trabajo_id.setter
    def trabajo_id(self, trabajo_id: int):
        """Sets the trabajo_id of this Trabajo.

        Identicador del trabajo  # noqa: E501

        :param trabajo_id: The trabajo_id of this Trabajo.
        :type trabajo_id: int
        """

        self._trabajo_id = trabajo_id

    @property
    def id_vehiculo(self) -> int:
        """Gets the id_vehiculo of this Trabajo.

        ID del vehículo sobre el que se reliza el trabajo  # noqa: E501

        :return: The id_vehiculo of this Trabajo.
        :rtype: int
        """
        return self._id_vehiculo

    @id_vehiculo.setter
    def id_vehiculo(self, id_vehiculo: int):
        """Sets the id_vehiculo of this Trabajo.

        ID del vehículo sobre el que se reliza el trabajo  # noqa: E501

        :param id_vehiculo: The id_vehiculo of this Trabajo.
        :type id_vehiculo: int
        """

        self._id_vehiculo = id_vehiculo

    @property
    def id_cliente(self) -> int:
        """Gets the id_cliente of this Trabajo.

        ID del cliente propietario del vehículo  # noqa: E501

        :return: The id_cliente of this Trabajo.
        :rtype: int
        """
        return self._id_cliente

    @id_cliente.setter
    def id_cliente(self, id_cliente: int):
        """Sets the id_cliente of this Trabajo.

        ID del cliente propietario del vehículo  # noqa: E501

        :param id_cliente: The id_cliente of this Trabajo.
        :type id_cliente: int
        """

        self._id_cliente = id_cliente

    @property
    def nombre(self) -> str:
        """Gets the nombre of this Trabajo.

        Nombre del tipo de trabajo  # noqa: E501

        :return: The nombre of this Trabajo.
        :rtype: str
        """
        return self._nombre

    @nombre.setter
    def nombre(self, nombre: str):
        """Sets the nombre of this Trabajo.

        Nombre del tipo de trabajo  # noqa: E501

        :param nombre: The nombre of this Trabajo.
        :type nombre: str
        """

        self._nombre = nombre

    @property
    def descripcion(self) -> str:
        """Gets the descripcion of this Trabajo.

        Descripción del trabajo  # noqa: E501

        :return: The descripcion of this Trabajo.
        :rtype: str
        """
        return self._descripcion

    @descripcion.setter
    def descripcion(self, descripcion: str):
        """Sets the descripcion of this Trabajo.

        Descripción del trabajo  # noqa: E501

        :param descripcion: The descripcion of this Trabajo.
        :type descripcion: str
        """

        self._descripcion = descripcion

    @property
    def estado_trabajo(self) -> str:
        """Gets the estado_trabajo of this Trabajo.

        Posibles estados del trabajo [Creado, Planificado, Iniciado, Terminado]  # noqa: E501

        :return: The estado_trabajo of this Trabajo.
        :rtype: str
        """
        return self._estado_trabajo

    @estado_trabajo.setter
    def estado_trabajo(self, estado_trabajo: str):
        """Sets the estado_trabajo of this Trabajo.

        Posibles estados del trabajo [Creado, Planificado, Iniciado, Terminado]  # noqa: E501

        :param estado_trabajo: The estado_trabajo of this Trabajo.
        :type estado_trabajo: str
        """
        allowed_values = ["Creado", "Planificado", "Iniciado", "Terminado"]  # noqa: E501
        if estado_trabajo not in allowed_values:
            raise ValueError(
                "Invalid value for `estado_trabajo` ({0}), must be one of {1}"
                .format(estado_trabajo, allowed_values)
            )

        self._estado_trabajo = estado_trabajo

    @property
    def fecha_inicio(self) -> datetime:
        """Gets the fecha_inicio of this Trabajo.

        Fecha en la que se inicializa el trabajo  # noqa: E501

        :return: The fecha_inicio of this Trabajo.
        :rtype: datetime
        """
        return self._fecha_inicio

    @fecha_inicio.setter
    def fecha_inicio(self, fecha_inicio: datetime):
        """Sets the fecha_inicio of this Trabajo.

        Fecha en la que se inicializa el trabajo  # noqa: E501

        :param fecha_inicio: The fecha_inicio of this Trabajo.
        :type fecha_inicio: datetime
        """

        self._fecha_inicio = fecha_inicio

    @property
    def fecha_fin(self) -> datetime:
        """Gets the fecha_fin of this Trabajo.

        Fecha en la que se finaliza el trabajo  # noqa: E501

        :return: The fecha_fin of this Trabajo.
        :rtype: datetime
        """
        return self._fecha_fin

    @fecha_fin.setter
    def fecha_fin(self, fecha_fin: datetime):
        """Sets the fecha_fin of this Trabajo.

        Fecha en la que se finaliza el trabajo  # noqa: E501

        :param fecha_fin: The fecha_fin of this Trabajo.
        :type fecha_fin: datetime
        """

        self._fecha_fin = fecha_fin

    @property
    def links(self) -> TrabajoLinks:
        """Gets the links of this Trabajo.


        :return: The links of this Trabajo.
        :rtype: TrabajoLinks
        """
        return self._links

    @links.setter
    def links(self, links: TrabajoLinks):
        """Sets the links of this Trabajo.


        :param links: The links of this Trabajo.
        :type links: TrabajoLinks
        """

        self._links = links
