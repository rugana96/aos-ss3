# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Body(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, nombre: str=None, descripcion: str=None, id_vehiculo: int=None, id_cliente: int=None):  # noqa: E501
        """Body - a model defined in Swagger

        :param nombre: The nombre of this Body.  # noqa: E501
        :type nombre: str
        :param descripcion: The descripcion of this Body.  # noqa: E501
        :type descripcion: str
        :param id_vehiculo: The id_vehiculo of this Body.  # noqa: E501
        :type id_vehiculo: int
        :param id_cliente: The id_cliente of this Body.  # noqa: E501
        :type id_cliente: int
        """
        self.swagger_types = {
            'nombre': str,
            'descripcion': str,
            'id_vehiculo': int,
            'id_cliente': int
        }

        self.attribute_map = {
            'nombre': 'nombre',
            'descripcion': 'descripcion',
            'id_vehiculo': 'idVehiculo',
            'id_cliente': 'idCliente'
        }
        self._nombre = nombre
        self._descripcion = descripcion
        self._id_vehiculo = id_vehiculo
        self._id_cliente = id_cliente

    @classmethod
    def from_dict(cls, dikt) -> 'Body':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The body of this Body.  # noqa: E501
        :rtype: Body
        """
        return util.deserialize_model(dikt, cls)

    @property
    def nombre(self) -> str:
        """Gets the nombre of this Body.

        Nombre del tipo de trabajo  # noqa: E501

        :return: The nombre of this Body.
        :rtype: str
        """
        return self._nombre

    @nombre.setter
    def nombre(self, nombre: str):
        """Sets the nombre of this Body.

        Nombre del tipo de trabajo  # noqa: E501

        :param nombre: The nombre of this Body.
        :type nombre: str
        """
        if nombre is None:
            raise ValueError("Invalid value for `nombre`, must not be `None`")  # noqa: E501

        self._nombre = nombre

    @property
    def descripcion(self) -> str:
        """Gets the descripcion of this Body.

        Descripción del trabajo  # noqa: E501

        :return: The descripcion of this Body.
        :rtype: str
        """
        return self._descripcion

    @descripcion.setter
    def descripcion(self, descripcion: str):
        """Sets the descripcion of this Body.

        Descripción del trabajo  # noqa: E501

        :param descripcion: The descripcion of this Body.
        :type descripcion: str
        """
        if descripcion is None:
            raise ValueError("Invalid value for `descripcion`, must not be `None`")  # noqa: E501

        self._descripcion = descripcion

    @property
    def id_vehiculo(self) -> int:
        """Gets the id_vehiculo of this Body.

        Identificador del vehículo  # noqa: E501

        :return: The id_vehiculo of this Body.
        :rtype: int
        """
        return self._id_vehiculo

    @id_vehiculo.setter
    def id_vehiculo(self, id_vehiculo: int):
        """Sets the id_vehiculo of this Body.

        Identificador del vehículo  # noqa: E501

        :param id_vehiculo: The id_vehiculo of this Body.
        :type id_vehiculo: int
        """
        if id_vehiculo is None:
            raise ValueError("Invalid value for `id_vehiculo`, must not be `None`")  # noqa: E501

        self._id_vehiculo = id_vehiculo

    @property
    def id_cliente(self) -> int:
        """Gets the id_cliente of this Body.

        Identificador del cliente  # noqa: E501

        :return: The id_cliente of this Body.
        :rtype: int
        """
        return self._id_cliente

    @id_cliente.setter
    def id_cliente(self, id_cliente: int):
        """Sets the id_cliente of this Body.

        Identificador del cliente  # noqa: E501

        :param id_cliente: The id_cliente of this Body.
        :type id_cliente: int
        """
        if id_cliente is None:
            raise ValueError("Invalid value for `id_cliente`, must not be `None`")  # noqa: E501

        self._id_cliente = id_cliente
